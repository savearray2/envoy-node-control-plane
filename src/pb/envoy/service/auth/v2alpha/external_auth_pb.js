/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
var envoy_type_http_status_pb = require('../../../../envoy/type/http_status_pb.js');
var envoy_service_auth_v2alpha_attribute_context_pb = require('../../../../envoy/service/auth/v2alpha/attribute_context_pb.js');
var google_rpc_status_pb = require('../../../../google/rpc/status_pb.js');
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.exportSymbol('proto.envoy.service.auth.v2alpha.CheckRequest', null, global);
goog.exportSymbol('proto.envoy.service.auth.v2alpha.CheckResponse', null, global);
goog.exportSymbol('proto.envoy.service.auth.v2alpha.DeniedHttpResponse', null, global);
goog.exportSymbol('proto.envoy.service.auth.v2alpha.OkHttpResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.auth.v2alpha.CheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.auth.v2alpha.CheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.auth.v2alpha.CheckRequest.displayName = 'proto.envoy.service.auth.v2alpha.CheckRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.auth.v2alpha.CheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.auth.v2alpha.CheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.auth.v2alpha.CheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.CheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributes: (f = msg.getAttributes()) && envoy_service_auth_v2alpha_attribute_context_pb.AttributeContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.auth.v2alpha.CheckRequest}
 */
proto.envoy.service.auth.v2alpha.CheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.auth.v2alpha.CheckRequest;
  return proto.envoy.service.auth.v2alpha.CheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.auth.v2alpha.CheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.auth.v2alpha.CheckRequest}
 */
proto.envoy.service.auth.v2alpha.CheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_service_auth_v2alpha_attribute_context_pb.AttributeContext;
      reader.readMessage(value,envoy_service_auth_v2alpha_attribute_context_pb.AttributeContext.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.auth.v2alpha.CheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.auth.v2alpha.CheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.auth.v2alpha.CheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.CheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_service_auth_v2alpha_attribute_context_pb.AttributeContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional AttributeContext attributes = 1;
 * @return {?proto.envoy.service.auth.v2alpha.AttributeContext}
 */
proto.envoy.service.auth.v2alpha.CheckRequest.prototype.getAttributes = function() {
  return /** @type{?proto.envoy.service.auth.v2alpha.AttributeContext} */ (
    jspb.Message.getWrapperField(this, envoy_service_auth_v2alpha_attribute_context_pb.AttributeContext, 1));
};


/** @param {?proto.envoy.service.auth.v2alpha.AttributeContext|undefined} value */
proto.envoy.service.auth.v2alpha.CheckRequest.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.auth.v2alpha.CheckRequest.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.auth.v2alpha.CheckRequest.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.auth.v2alpha.DeniedHttpResponse.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.auth.v2alpha.DeniedHttpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.auth.v2alpha.DeniedHttpResponse.displayName = 'proto.envoy.service.auth.v2alpha.DeniedHttpResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.auth.v2alpha.DeniedHttpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.auth.v2alpha.DeniedHttpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && envoy_type_http_status_pb.HttpStatus.toObject(includeInstance, f),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    envoy_api_v2_core_base_pb.HeaderValueOption.toObject, includeInstance),
    body: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.auth.v2alpha.DeniedHttpResponse}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.auth.v2alpha.DeniedHttpResponse;
  return proto.envoy.service.auth.v2alpha.DeniedHttpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.auth.v2alpha.DeniedHttpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.auth.v2alpha.DeniedHttpResponse}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_type_http_status_pb.HttpStatus;
      reader.readMessage(value,envoy_type_http_status_pb.HttpStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new envoy_api_v2_core_base_pb.HeaderValueOption;
      reader.readMessage(value,envoy_api_v2_core_base_pb.HeaderValueOption.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.auth.v2alpha.DeniedHttpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.auth.v2alpha.DeniedHttpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_type_http_status_pb.HttpStatus.serializeBinaryToWriter
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_api_v2_core_base_pb.HeaderValueOption.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional envoy.type.HttpStatus status = 1;
 * @return {?proto.envoy.type.HttpStatus}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.getStatus = function() {
  return /** @type{?proto.envoy.type.HttpStatus} */ (
    jspb.Message.getWrapperField(this, envoy_type_http_status_pb.HttpStatus, 1));
};


/** @param {?proto.envoy.type.HttpStatus|undefined} value */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated envoy.api.v2.core.HeaderValueOption headers = 2;
 * @return {!Array.<!proto.envoy.api.v2.core.HeaderValueOption>}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.getHeadersList = function() {
  return /** @type{!Array.<!proto.envoy.api.v2.core.HeaderValueOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_base_pb.HeaderValueOption, 2));
};


/** @param {!Array.<!proto.envoy.api.v2.core.HeaderValueOption>} value */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.core.HeaderValueOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.HeaderValueOption}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.core.HeaderValueOption, opt_index);
};


proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};


/**
 * optional string body = 3;
 * @return {string}
 */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.service.auth.v2alpha.DeniedHttpResponse.prototype.setBody = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.auth.v2alpha.OkHttpResponse.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.auth.v2alpha.OkHttpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.auth.v2alpha.OkHttpResponse.displayName = 'proto.envoy.service.auth.v2alpha.OkHttpResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.auth.v2alpha.OkHttpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.auth.v2alpha.OkHttpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    envoy_api_v2_core_base_pb.HeaderValueOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.auth.v2alpha.OkHttpResponse}
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.auth.v2alpha.OkHttpResponse;
  return proto.envoy.service.auth.v2alpha.OkHttpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.auth.v2alpha.OkHttpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.auth.v2alpha.OkHttpResponse}
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new envoy_api_v2_core_base_pb.HeaderValueOption;
      reader.readMessage(value,envoy_api_v2_core_base_pb.HeaderValueOption.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.auth.v2alpha.OkHttpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.auth.v2alpha.OkHttpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_api_v2_core_base_pb.HeaderValueOption.serializeBinaryToWriter
    );
  }
};


/**
 * repeated envoy.api.v2.core.HeaderValueOption headers = 2;
 * @return {!Array.<!proto.envoy.api.v2.core.HeaderValueOption>}
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.prototype.getHeadersList = function() {
  return /** @type{!Array.<!proto.envoy.api.v2.core.HeaderValueOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_base_pb.HeaderValueOption, 2));
};


/** @param {!Array.<!proto.envoy.api.v2.core.HeaderValueOption>} value */
proto.envoy.service.auth.v2alpha.OkHttpResponse.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.core.HeaderValueOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.HeaderValueOption}
 */
proto.envoy.service.auth.v2alpha.OkHttpResponse.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.core.HeaderValueOption, opt_index);
};


proto.envoy.service.auth.v2alpha.OkHttpResponse.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.auth.v2alpha.CheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.service.auth.v2alpha.CheckResponse.oneofGroups_);
};
goog.inherits(proto.envoy.service.auth.v2alpha.CheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.auth.v2alpha.CheckResponse.displayName = 'proto.envoy.service.auth.v2alpha.CheckResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.service.auth.v2alpha.CheckResponse.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.HttpResponseCase = {
  HTTP_RESPONSE_NOT_SET: 0,
  DENIED_RESPONSE: 2,
  OK_RESPONSE: 3
};

/**
 * @return {proto.envoy.service.auth.v2alpha.CheckResponse.HttpResponseCase}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.getHttpResponseCase = function() {
  return /** @type {proto.envoy.service.auth.v2alpha.CheckResponse.HttpResponseCase} */(jspb.Message.computeOneofCase(this, proto.envoy.service.auth.v2alpha.CheckResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.auth.v2alpha.CheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.auth.v2alpha.CheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.CheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    deniedResponse: (f = msg.getDeniedResponse()) && proto.envoy.service.auth.v2alpha.DeniedHttpResponse.toObject(includeInstance, f),
    okResponse: (f = msg.getOkResponse()) && proto.envoy.service.auth.v2alpha.OkHttpResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.auth.v2alpha.CheckResponse}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.auth.v2alpha.CheckResponse;
  return proto.envoy.service.auth.v2alpha.CheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.auth.v2alpha.CheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.auth.v2alpha.CheckResponse}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.envoy.service.auth.v2alpha.DeniedHttpResponse;
      reader.readMessage(value,proto.envoy.service.auth.v2alpha.DeniedHttpResponse.deserializeBinaryFromReader);
      msg.setDeniedResponse(value);
      break;
    case 3:
      var value = new proto.envoy.service.auth.v2alpha.OkHttpResponse;
      reader.readMessage(value,proto.envoy.service.auth.v2alpha.OkHttpResponse.deserializeBinaryFromReader);
      msg.setOkResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.auth.v2alpha.CheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.auth.v2alpha.CheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.auth.v2alpha.CheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getDeniedResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.auth.v2alpha.DeniedHttpResponse.serializeBinaryToWriter
    );
  }
  f = message.getOkResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.service.auth.v2alpha.OkHttpResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/** @param {?proto.google.rpc.Status|undefined} value */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.auth.v2alpha.CheckResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DeniedHttpResponse denied_response = 2;
 * @return {?proto.envoy.service.auth.v2alpha.DeniedHttpResponse}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.getDeniedResponse = function() {
  return /** @type{?proto.envoy.service.auth.v2alpha.DeniedHttpResponse} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.auth.v2alpha.DeniedHttpResponse, 2));
};


/** @param {?proto.envoy.service.auth.v2alpha.DeniedHttpResponse|undefined} value */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.setDeniedResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.service.auth.v2alpha.CheckResponse.oneofGroups_[0], value);
};


proto.envoy.service.auth.v2alpha.CheckResponse.prototype.clearDeniedResponse = function() {
  this.setDeniedResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.hasDeniedResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OkHttpResponse ok_response = 3;
 * @return {?proto.envoy.service.auth.v2alpha.OkHttpResponse}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.getOkResponse = function() {
  return /** @type{?proto.envoy.service.auth.v2alpha.OkHttpResponse} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.auth.v2alpha.OkHttpResponse, 3));
};


/** @param {?proto.envoy.service.auth.v2alpha.OkHttpResponse|undefined} value */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.setOkResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.service.auth.v2alpha.CheckResponse.oneofGroups_[0], value);
};


proto.envoy.service.auth.v2alpha.CheckResponse.prototype.clearOkResponse = function() {
  this.setOkResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.auth.v2alpha.CheckResponse.prototype.hasOkResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.envoy.service.auth.v2alpha);
