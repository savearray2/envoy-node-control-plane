/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
var metrics_pb = require('../../../../metrics_pb.js');
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.exportSymbol('proto.envoy.service.metrics.v2.StreamMetricsMessage', null, global);
goog.exportSymbol('proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier', null, global);
goog.exportSymbol('proto.envoy.service.metrics.v2.StreamMetricsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.metrics.v2.StreamMetricsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.metrics.v2.StreamMetricsResponse.displayName = 'proto.envoy.service.metrics.v2.StreamMetricsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.metrics.v2.StreamMetricsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.metrics.v2.StreamMetricsResponse}
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.metrics.v2.StreamMetricsResponse;
  return proto.envoy.service.metrics.v2.StreamMetricsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.metrics.v2.StreamMetricsResponse}
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.metrics.v2.StreamMetricsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.metrics.v2.StreamMetricsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.metrics.v2.StreamMetricsMessage.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.metrics.v2.StreamMetricsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.metrics.v2.StreamMetricsMessage.displayName = 'proto.envoy.service.metrics.v2.StreamMetricsMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.metrics.v2.StreamMetricsMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.toObject(includeInstance, f),
    envoyMetricsList: jspb.Message.toObjectList(msg.getEnvoyMetricsList(),
    metrics_pb.MetricFamily.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.metrics.v2.StreamMetricsMessage}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.metrics.v2.StreamMetricsMessage;
  return proto.envoy.service.metrics.v2.StreamMetricsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.metrics.v2.StreamMetricsMessage}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier;
      reader.readMessage(value,proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = new metrics_pb.MetricFamily;
      reader.readMessage(value,metrics_pb.MetricFamily.deserializeBinaryFromReader);
      msg.addEnvoyMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.metrics.v2.StreamMetricsMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getEnvoyMetricsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      metrics_pb.MetricFamily.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.displayName = 'proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && envoy_api_v2_core_base_pb.Node.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier;
  return proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.Node;
      reader.readMessage(value,envoy_api_v2_core_base_pb.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.Node.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.Node node = 1;
 * @return {?proto.envoy.api.v2.core.Node}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.prototype.getNode = function() {
  return /** @type{?proto.envoy.api.v2.core.Node} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.Node, 1));
};


/** @param {?proto.envoy.api.v2.core.Node|undefined} value */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.prototype.setNode = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.prototype.clearNode = function() {
  this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier identifier = 1;
 * @return {?proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.getIdentifier = function() {
  return /** @type{?proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier, 1));
};


/** @param {?proto.envoy.service.metrics.v2.StreamMetricsMessage.Identifier|undefined} value */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.setIdentifier = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.clearIdentifier = function() {
  this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated io.prometheus.client.MetricFamily envoy_metrics = 2;
 * @return {!Array.<!proto.io.prometheus.client.MetricFamily>}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.getEnvoyMetricsList = function() {
  return /** @type{!Array.<!proto.io.prometheus.client.MetricFamily>} */ (
    jspb.Message.getRepeatedWrapperField(this, metrics_pb.MetricFamily, 2));
};


/** @param {!Array.<!proto.io.prometheus.client.MetricFamily>} value */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.setEnvoyMetricsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.prometheus.client.MetricFamily=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.prometheus.client.MetricFamily}
 */
proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.addEnvoyMetrics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.prometheus.client.MetricFamily, opt_index);
};


proto.envoy.service.metrics.v2.StreamMetricsMessage.prototype.clearEnvoyMetricsList = function() {
  this.setEnvoyMetricsList([]);
};


goog.object.extend(exports, proto.envoy.service.metrics.v2);
