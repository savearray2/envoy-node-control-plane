/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
var envoy_api_v2_core_health_check_pb = require('../../../../envoy/api/v2/core/health_check_pb.js');
var envoy_api_v2_endpoint_endpoint_pb = require('../../../../envoy/api/v2/endpoint/endpoint_pb.js');
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.exportSymbol('proto.envoy.service.discovery.v2.Capability', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.Capability.Protocol', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.ClusterHealthCheck', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.EndpointHealth', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.EndpointHealthResponse', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.HealthCheckRequest', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.HealthCheckSpecifier', null, global);
goog.exportSymbol('proto.envoy.service.discovery.v2.LocalityEndpoints', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.Capability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.discovery.v2.Capability.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.discovery.v2.Capability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.Capability.displayName = 'proto.envoy.service.discovery.v2.Capability';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.discovery.v2.Capability.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.Capability.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.Capability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.Capability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.Capability.toObject = function(includeInstance, msg) {
  var f, obj = {
    healthCheckProtocolsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.Capability}
 */
proto.envoy.service.discovery.v2.Capability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.Capability;
  return proto.envoy.service.discovery.v2.Capability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.Capability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.Capability}
 */
proto.envoy.service.discovery.v2.Capability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<!proto.envoy.service.discovery.v2.Capability.Protocol>} */ (reader.readPackedEnum());
      msg.setHealthCheckProtocolsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.Capability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.Capability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.Capability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.Capability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthCheckProtocolsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.service.discovery.v2.Capability.Protocol = {
  HTTP: 0,
  TCP: 1,
  REDIS: 2
};

/**
 * repeated Protocol health_check_protocols = 1;
 * @return {!Array.<!proto.envoy.service.discovery.v2.Capability.Protocol>}
 */
proto.envoy.service.discovery.v2.Capability.prototype.getHealthCheckProtocolsList = function() {
  return /** @type {!Array.<!proto.envoy.service.discovery.v2.Capability.Protocol>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<!proto.envoy.service.discovery.v2.Capability.Protocol>} value */
proto.envoy.service.discovery.v2.Capability.prototype.setHealthCheckProtocolsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.envoy.service.discovery.v2.Capability.Protocol} value
 * @param {number=} opt_index
 */
proto.envoy.service.discovery.v2.Capability.prototype.addHealthCheckProtocols = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.envoy.service.discovery.v2.Capability.prototype.clearHealthCheckProtocolsList = function() {
  this.setHealthCheckProtocolsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.HealthCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.discovery.v2.HealthCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.HealthCheckRequest.displayName = 'proto.envoy.service.discovery.v2.HealthCheckRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.HealthCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.HealthCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && envoy_api_v2_core_base_pb.Node.toObject(includeInstance, f),
    capability: (f = msg.getCapability()) && proto.envoy.service.discovery.v2.Capability.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.HealthCheckRequest}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.HealthCheckRequest;
  return proto.envoy.service.discovery.v2.HealthCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.HealthCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.HealthCheckRequest}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.Node;
      reader.readMessage(value,envoy_api_v2_core_base_pb.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = new proto.envoy.service.discovery.v2.Capability;
      reader.readMessage(value,proto.envoy.service.discovery.v2.Capability.deserializeBinaryFromReader);
      msg.setCapability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.HealthCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.HealthCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.Node.serializeBinaryToWriter
    );
  }
  f = message.getCapability();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.discovery.v2.Capability.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.Node node = 1;
 * @return {?proto.envoy.api.v2.core.Node}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.getNode = function() {
  return /** @type{?proto.envoy.api.v2.core.Node} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.Node, 1));
};


/** @param {?proto.envoy.api.v2.core.Node|undefined} value */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.setNode = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.clearNode = function() {
  this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Capability capability = 2;
 * @return {?proto.envoy.service.discovery.v2.Capability}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.getCapability = function() {
  return /** @type{?proto.envoy.service.discovery.v2.Capability} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v2.Capability, 2));
};


/** @param {?proto.envoy.service.discovery.v2.Capability|undefined} value */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.setCapability = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.clearCapability = function() {
  this.setCapability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.HealthCheckRequest.prototype.hasCapability = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.EndpointHealth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.discovery.v2.EndpointHealth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.EndpointHealth.displayName = 'proto.envoy.service.discovery.v2.EndpointHealth';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.EndpointHealth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.EndpointHealth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.EndpointHealth.toObject = function(includeInstance, msg) {
  var f, obj = {
    endpoint: (f = msg.getEndpoint()) && envoy_api_v2_endpoint_endpoint_pb.Endpoint.toObject(includeInstance, f),
    healthStatus: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.EndpointHealth}
 */
proto.envoy.service.discovery.v2.EndpointHealth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.EndpointHealth;
  return proto.envoy.service.discovery.v2.EndpointHealth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.EndpointHealth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.EndpointHealth}
 */
proto.envoy.service.discovery.v2.EndpointHealth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_endpoint_endpoint_pb.Endpoint;
      reader.readMessage(value,envoy_api_v2_endpoint_endpoint_pb.Endpoint.deserializeBinaryFromReader);
      msg.setEndpoint(value);
      break;
    case 2:
      var value = /** @type {!proto.envoy.api.v2.core.HealthStatus} */ (reader.readEnum());
      msg.setHealthStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.EndpointHealth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.EndpointHealth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.EndpointHealth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_endpoint_endpoint_pb.Endpoint.serializeBinaryToWriter
    );
  }
  f = message.getHealthStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional envoy.api.v2.endpoint.Endpoint endpoint = 1;
 * @return {?proto.envoy.api.v2.endpoint.Endpoint}
 */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.getEndpoint = function() {
  return /** @type{?proto.envoy.api.v2.endpoint.Endpoint} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_endpoint_endpoint_pb.Endpoint, 1));
};


/** @param {?proto.envoy.api.v2.endpoint.Endpoint|undefined} value */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.setEndpoint = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.discovery.v2.EndpointHealth.prototype.clearEndpoint = function() {
  this.setEndpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.hasEndpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.api.v2.core.HealthStatus health_status = 2;
 * @return {!proto.envoy.api.v2.core.HealthStatus}
 */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.getHealthStatus = function() {
  return /** @type {!proto.envoy.api.v2.core.HealthStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.envoy.api.v2.core.HealthStatus} value */
proto.envoy.service.discovery.v2.EndpointHealth.prototype.setHealthStatus = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.discovery.v2.EndpointHealthResponse.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.discovery.v2.EndpointHealthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.EndpointHealthResponse.displayName = 'proto.envoy.service.discovery.v2.EndpointHealthResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.EndpointHealthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.EndpointHealthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    endpointsHealthList: jspb.Message.toObjectList(msg.getEndpointsHealthList(),
    proto.envoy.service.discovery.v2.EndpointHealth.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.EndpointHealthResponse}
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.EndpointHealthResponse;
  return proto.envoy.service.discovery.v2.EndpointHealthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.EndpointHealthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.EndpointHealthResponse}
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.discovery.v2.EndpointHealth;
      reader.readMessage(value,proto.envoy.service.discovery.v2.EndpointHealth.deserializeBinaryFromReader);
      msg.addEndpointsHealth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.EndpointHealthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.EndpointHealthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndpointsHealthList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.service.discovery.v2.EndpointHealth.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EndpointHealth endpoints_health = 1;
 * @return {!Array.<!proto.envoy.service.discovery.v2.EndpointHealth>}
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.prototype.getEndpointsHealthList = function() {
  return /** @type{!Array.<!proto.envoy.service.discovery.v2.EndpointHealth>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.service.discovery.v2.EndpointHealth, 1));
};


/** @param {!Array.<!proto.envoy.service.discovery.v2.EndpointHealth>} value */
proto.envoy.service.discovery.v2.EndpointHealthResponse.prototype.setEndpointsHealthList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.service.discovery.v2.EndpointHealth=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.service.discovery.v2.EndpointHealth}
 */
proto.envoy.service.discovery.v2.EndpointHealthResponse.prototype.addEndpointsHealth = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.service.discovery.v2.EndpointHealth, opt_index);
};


proto.envoy.service.discovery.v2.EndpointHealthResponse.prototype.clearEndpointsHealthList = function() {
  this.setEndpointsHealthList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.oneofGroups_);
};
goog.inherits(proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.displayName = 'proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.RequestTypeCase = {
  REQUEST_TYPE_NOT_SET: 0,
  HEALTH_CHECK_REQUEST: 1,
  ENDPOINT_HEALTH_RESPONSE: 2
};

/**
 * @return {proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.RequestTypeCase}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.getRequestTypeCase = function() {
  return /** @type {proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.RequestTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    healthCheckRequest: (f = msg.getHealthCheckRequest()) && proto.envoy.service.discovery.v2.HealthCheckRequest.toObject(includeInstance, f),
    endpointHealthResponse: (f = msg.getEndpointHealthResponse()) && proto.envoy.service.discovery.v2.EndpointHealthResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse;
  return proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.discovery.v2.HealthCheckRequest;
      reader.readMessage(value,proto.envoy.service.discovery.v2.HealthCheckRequest.deserializeBinaryFromReader);
      msg.setHealthCheckRequest(value);
      break;
    case 2:
      var value = new proto.envoy.service.discovery.v2.EndpointHealthResponse;
      reader.readMessage(value,proto.envoy.service.discovery.v2.EndpointHealthResponse.deserializeBinaryFromReader);
      msg.setEndpointHealthResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthCheckRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.service.discovery.v2.HealthCheckRequest.serializeBinaryToWriter
    );
  }
  f = message.getEndpointHealthResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.discovery.v2.EndpointHealthResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional HealthCheckRequest health_check_request = 1;
 * @return {?proto.envoy.service.discovery.v2.HealthCheckRequest}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.getHealthCheckRequest = function() {
  return /** @type{?proto.envoy.service.discovery.v2.HealthCheckRequest} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v2.HealthCheckRequest, 1));
};


/** @param {?proto.envoy.service.discovery.v2.HealthCheckRequest|undefined} value */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.setHealthCheckRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.oneofGroups_[0], value);
};


proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.clearHealthCheckRequest = function() {
  this.setHealthCheckRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.hasHealthCheckRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EndpointHealthResponse endpoint_health_response = 2;
 * @return {?proto.envoy.service.discovery.v2.EndpointHealthResponse}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.getEndpointHealthResponse = function() {
  return /** @type{?proto.envoy.service.discovery.v2.EndpointHealthResponse} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v2.EndpointHealthResponse, 2));
};


/** @param {?proto.envoy.service.discovery.v2.EndpointHealthResponse|undefined} value */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.setEndpointHealthResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.oneofGroups_[0], value);
};


proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.clearEndpointHealthResponse = function() {
  this.setEndpointHealthResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse.prototype.hasEndpointHealthResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.LocalityEndpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.discovery.v2.LocalityEndpoints.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.discovery.v2.LocalityEndpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.LocalityEndpoints.displayName = 'proto.envoy.service.discovery.v2.LocalityEndpoints';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.LocalityEndpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.LocalityEndpoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    locality: (f = msg.getLocality()) && envoy_api_v2_core_base_pb.Locality.toObject(includeInstance, f),
    endpointsList: jspb.Message.toObjectList(msg.getEndpointsList(),
    envoy_api_v2_endpoint_endpoint_pb.Endpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.LocalityEndpoints}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.LocalityEndpoints;
  return proto.envoy.service.discovery.v2.LocalityEndpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.LocalityEndpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.LocalityEndpoints}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.Locality;
      reader.readMessage(value,envoy_api_v2_core_base_pb.Locality.deserializeBinaryFromReader);
      msg.setLocality(value);
      break;
    case 2:
      var value = new envoy_api_v2_endpoint_endpoint_pb.Endpoint;
      reader.readMessage(value,envoy_api_v2_endpoint_endpoint_pb.Endpoint.deserializeBinaryFromReader);
      msg.addEndpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.LocalityEndpoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.LocalityEndpoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocality();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.Locality.serializeBinaryToWriter
    );
  }
  f = message.getEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_api_v2_endpoint_endpoint_pb.Endpoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.Locality locality = 1;
 * @return {?proto.envoy.api.v2.core.Locality}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.getLocality = function() {
  return /** @type{?proto.envoy.api.v2.core.Locality} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.Locality, 1));
};


/** @param {?proto.envoy.api.v2.core.Locality|undefined} value */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.setLocality = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.clearLocality = function() {
  this.setLocality(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.hasLocality = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated envoy.api.v2.endpoint.Endpoint endpoints = 2;
 * @return {!Array.<!proto.envoy.api.v2.endpoint.Endpoint>}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.getEndpointsList = function() {
  return /** @type{!Array.<!proto.envoy.api.v2.endpoint.Endpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_endpoint_endpoint_pb.Endpoint, 2));
};


/** @param {!Array.<!proto.envoy.api.v2.endpoint.Endpoint>} value */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.setEndpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.endpoint.Endpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.endpoint.Endpoint}
 */
proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.addEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.endpoint.Endpoint, opt_index);
};


proto.envoy.service.discovery.v2.LocalityEndpoints.prototype.clearEndpointsList = function() {
  this.setEndpointsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.discovery.v2.ClusterHealthCheck.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.discovery.v2.ClusterHealthCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.ClusterHealthCheck.displayName = 'proto.envoy.service.discovery.v2.ClusterHealthCheck';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.ClusterHealthCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.ClusterHealthCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    healthChecksList: jspb.Message.toObjectList(msg.getHealthChecksList(),
    envoy_api_v2_core_health_check_pb.HealthCheck.toObject, includeInstance),
    localityEndpointsList: jspb.Message.toObjectList(msg.getLocalityEndpointsList(),
    proto.envoy.service.discovery.v2.LocalityEndpoints.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.ClusterHealthCheck}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.ClusterHealthCheck;
  return proto.envoy.service.discovery.v2.ClusterHealthCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.ClusterHealthCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.ClusterHealthCheck}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = new envoy_api_v2_core_health_check_pb.HealthCheck;
      reader.readMessage(value,envoy_api_v2_core_health_check_pb.HealthCheck.deserializeBinaryFromReader);
      msg.addHealthChecks(value);
      break;
    case 3:
      var value = new proto.envoy.service.discovery.v2.LocalityEndpoints;
      reader.readMessage(value,proto.envoy.service.discovery.v2.LocalityEndpoints.deserializeBinaryFromReader);
      msg.addLocalityEndpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.ClusterHealthCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.ClusterHealthCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHealthChecksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_api_v2_core_health_check_pb.HealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getLocalityEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.envoy.service.discovery.v2.LocalityEndpoints.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.setClusterName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated envoy.api.v2.core.HealthCheck health_checks = 2;
 * @return {!Array.<!proto.envoy.api.v2.core.HealthCheck>}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.getHealthChecksList = function() {
  return /** @type{!Array.<!proto.envoy.api.v2.core.HealthCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_health_check_pb.HealthCheck, 2));
};


/** @param {!Array.<!proto.envoy.api.v2.core.HealthCheck>} value */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.setHealthChecksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.core.HealthCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.HealthCheck}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.addHealthChecks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.core.HealthCheck, opt_index);
};


proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.clearHealthChecksList = function() {
  this.setHealthChecksList([]);
};


/**
 * repeated LocalityEndpoints locality_endpoints = 3;
 * @return {!Array.<!proto.envoy.service.discovery.v2.LocalityEndpoints>}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.getLocalityEndpointsList = function() {
  return /** @type{!Array.<!proto.envoy.service.discovery.v2.LocalityEndpoints>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.service.discovery.v2.LocalityEndpoints, 3));
};


/** @param {!Array.<!proto.envoy.service.discovery.v2.LocalityEndpoints>} value */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.setLocalityEndpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.envoy.service.discovery.v2.LocalityEndpoints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.service.discovery.v2.LocalityEndpoints}
 */
proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.addLocalityEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.envoy.service.discovery.v2.LocalityEndpoints, opt_index);
};


proto.envoy.service.discovery.v2.ClusterHealthCheck.prototype.clearLocalityEndpointsList = function() {
  this.setLocalityEndpointsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.discovery.v2.HealthCheckSpecifier.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.discovery.v2.HealthCheckSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.service.discovery.v2.HealthCheckSpecifier.displayName = 'proto.envoy.service.discovery.v2.HealthCheckSpecifier';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v2.HealthCheckSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v2.HealthCheckSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterHealthChecksList: jspb.Message.toObjectList(msg.getClusterHealthChecksList(),
    proto.envoy.service.discovery.v2.ClusterHealthCheck.toObject, includeInstance),
    interval: (f = msg.getInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v2.HealthCheckSpecifier}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v2.HealthCheckSpecifier;
  return proto.envoy.service.discovery.v2.HealthCheckSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v2.HealthCheckSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v2.HealthCheckSpecifier}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.discovery.v2.ClusterHealthCheck;
      reader.readMessage(value,proto.envoy.service.discovery.v2.ClusterHealthCheck.deserializeBinaryFromReader);
      msg.addClusterHealthChecks(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v2.HealthCheckSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v2.HealthCheckSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterHealthChecksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.service.discovery.v2.ClusterHealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClusterHealthCheck cluster_health_checks = 1;
 * @return {!Array.<!proto.envoy.service.discovery.v2.ClusterHealthCheck>}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.getClusterHealthChecksList = function() {
  return /** @type{!Array.<!proto.envoy.service.discovery.v2.ClusterHealthCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.service.discovery.v2.ClusterHealthCheck, 1));
};


/** @param {!Array.<!proto.envoy.service.discovery.v2.ClusterHealthCheck>} value */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.setClusterHealthChecksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.service.discovery.v2.ClusterHealthCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.service.discovery.v2.ClusterHealthCheck}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.addClusterHealthChecks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.service.discovery.v2.ClusterHealthCheck, opt_index);
};


proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.clearClusterHealthChecksList = function() {
  this.setClusterHealthChecksList([]);
};


/**
 * optional google.protobuf.Duration interval = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.getInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.setInterval = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.clearInterval = function() {
  this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.service.discovery.v2.HealthCheckSpecifier.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.envoy.service.discovery.v2);
