/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_address_pb = require('../../../../envoy/api/v2/core/address_pb.js');
var envoy_type_matcher_string_pb = require('../../../../envoy/type/matcher/string_pb.js');
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.exportSymbol('proto.envoy.config.metrics.v2.DogStatsdSink', null, global);
goog.exportSymbol('proto.envoy.config.metrics.v2.HystrixSink', null, global);
goog.exportSymbol('proto.envoy.config.metrics.v2.StatsConfig', null, global);
goog.exportSymbol('proto.envoy.config.metrics.v2.StatsMatcher', null, global);
goog.exportSymbol('proto.envoy.config.metrics.v2.StatsSink', null, global);
goog.exportSymbol('proto.envoy.config.metrics.v2.StatsdSink', null, global);
goog.exportSymbol('proto.envoy.config.metrics.v2.TagSpecifier', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.StatsSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.metrics.v2.StatsSink.oneofGroups_);
};
goog.inherits(proto.envoy.config.metrics.v2.StatsSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.StatsSink.displayName = 'proto.envoy.config.metrics.v2.StatsSink';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.metrics.v2.StatsSink.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.config.metrics.v2.StatsSink.ConfigTypeCase = {
  CONFIG_TYPE_NOT_SET: 0,
  CONFIG: 2,
  TYPED_CONFIG: 3
};

/**
 * @return {proto.envoy.config.metrics.v2.StatsSink.ConfigTypeCase}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.getConfigTypeCase = function() {
  return /** @type {proto.envoy.config.metrics.v2.StatsSink.ConfigTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.metrics.v2.StatsSink.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.StatsSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.StatsSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsSink.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    typedConfig: (f = msg.getTypedConfig()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.StatsSink}
 */
proto.envoy.config.metrics.v2.StatsSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.StatsSink;
  return proto.envoy.config.metrics.v2.StatsSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.StatsSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.StatsSink}
 */
proto.envoy.config.metrics.v2.StatsSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setTypedConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.StatsSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.StatsSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getTypedConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.StatsSink.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional google.protobuf.Struct config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.envoy.config.metrics.v2.StatsSink.prototype.setConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.metrics.v2.StatsSink.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsSink.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Any typed_config = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.getTypedConfig = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.envoy.config.metrics.v2.StatsSink.prototype.setTypedConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.metrics.v2.StatsSink.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsSink.prototype.clearTypedConfig = function() {
  this.setTypedConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsSink.prototype.hasTypedConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.StatsConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.metrics.v2.StatsConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.metrics.v2.StatsConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.StatsConfig.displayName = 'proto.envoy.config.metrics.v2.StatsConfig';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.metrics.v2.StatsConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.StatsConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.StatsConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    statsTagsList: jspb.Message.toObjectList(msg.getStatsTagsList(),
    proto.envoy.config.metrics.v2.TagSpecifier.toObject, includeInstance),
    useAllDefaultTags: (f = msg.getUseAllDefaultTags()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    statsMatcher: (f = msg.getStatsMatcher()) && proto.envoy.config.metrics.v2.StatsMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.StatsConfig}
 */
proto.envoy.config.metrics.v2.StatsConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.StatsConfig;
  return proto.envoy.config.metrics.v2.StatsConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.StatsConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.StatsConfig}
 */
proto.envoy.config.metrics.v2.StatsConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.metrics.v2.TagSpecifier;
      reader.readMessage(value,proto.envoy.config.metrics.v2.TagSpecifier.deserializeBinaryFromReader);
      msg.addStatsTags(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setUseAllDefaultTags(value);
      break;
    case 3:
      var value = new proto.envoy.config.metrics.v2.StatsMatcher;
      reader.readMessage(value,proto.envoy.config.metrics.v2.StatsMatcher.deserializeBinaryFromReader);
      msg.setStatsMatcher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.StatsConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.StatsConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatsTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.metrics.v2.TagSpecifier.serializeBinaryToWriter
    );
  }
  f = message.getUseAllDefaultTags();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getStatsMatcher();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.metrics.v2.StatsMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TagSpecifier stats_tags = 1;
 * @return {!Array.<!proto.envoy.config.metrics.v2.TagSpecifier>}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.getStatsTagsList = function() {
  return /** @type{!Array.<!proto.envoy.config.metrics.v2.TagSpecifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.metrics.v2.TagSpecifier, 1));
};


/** @param {!Array.<!proto.envoy.config.metrics.v2.TagSpecifier>} value */
proto.envoy.config.metrics.v2.StatsConfig.prototype.setStatsTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.metrics.v2.TagSpecifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.metrics.v2.TagSpecifier}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.addStatsTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.metrics.v2.TagSpecifier, opt_index);
};


proto.envoy.config.metrics.v2.StatsConfig.prototype.clearStatsTagsList = function() {
  this.setStatsTagsList([]);
};


/**
 * optional google.protobuf.BoolValue use_all_default_tags = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.getUseAllDefaultTags = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.envoy.config.metrics.v2.StatsConfig.prototype.setUseAllDefaultTags = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.config.metrics.v2.StatsConfig.prototype.clearUseAllDefaultTags = function() {
  this.setUseAllDefaultTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.hasUseAllDefaultTags = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StatsMatcher stats_matcher = 3;
 * @return {?proto.envoy.config.metrics.v2.StatsMatcher}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.getStatsMatcher = function() {
  return /** @type{?proto.envoy.config.metrics.v2.StatsMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.metrics.v2.StatsMatcher, 3));
};


/** @param {?proto.envoy.config.metrics.v2.StatsMatcher|undefined} value */
proto.envoy.config.metrics.v2.StatsConfig.prototype.setStatsMatcher = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.envoy.config.metrics.v2.StatsConfig.prototype.clearStatsMatcher = function() {
  this.setStatsMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsConfig.prototype.hasStatsMatcher = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.StatsMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_);
};
goog.inherits(proto.envoy.config.metrics.v2.StatsMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.StatsMatcher.displayName = 'proto.envoy.config.metrics.v2.StatsMatcher';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.envoy.config.metrics.v2.StatsMatcher.StatsMatcherCase = {
  STATS_MATCHER_NOT_SET: 0,
  REJECT_ALL: 1,
  EXCLUSION_LIST: 2,
  INCLUSION_LIST: 3
};

/**
 * @return {proto.envoy.config.metrics.v2.StatsMatcher.StatsMatcherCase}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.getStatsMatcherCase = function() {
  return /** @type {proto.envoy.config.metrics.v2.StatsMatcher.StatsMatcherCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.StatsMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.StatsMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    rejectAll: jspb.Message.getFieldWithDefault(msg, 1, false),
    exclusionList: (f = msg.getExclusionList()) && envoy_type_matcher_string_pb.ListStringMatcher.toObject(includeInstance, f),
    inclusionList: (f = msg.getInclusionList()) && envoy_type_matcher_string_pb.ListStringMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.StatsMatcher}
 */
proto.envoy.config.metrics.v2.StatsMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.StatsMatcher;
  return proto.envoy.config.metrics.v2.StatsMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.StatsMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.StatsMatcher}
 */
proto.envoy.config.metrics.v2.StatsMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRejectAll(value);
      break;
    case 2:
      var value = new envoy_type_matcher_string_pb.ListStringMatcher;
      reader.readMessage(value,envoy_type_matcher_string_pb.ListStringMatcher.deserializeBinaryFromReader);
      msg.setExclusionList(value);
      break;
    case 3:
      var value = new envoy_type_matcher_string_pb.ListStringMatcher;
      reader.readMessage(value,envoy_type_matcher_string_pb.ListStringMatcher.deserializeBinaryFromReader);
      msg.setInclusionList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.StatsMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.StatsMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getExclusionList();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_type_matcher_string_pb.ListStringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getInclusionList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_type_matcher_string_pb.ListStringMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool reject_all = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.getRejectAll = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.setRejectAll = function(value) {
  jspb.Message.setOneofField(this, 1, proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsMatcher.prototype.clearRejectAll = function() {
  jspb.Message.setOneofField(this, 1, proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.hasRejectAll = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.type.matcher.ListStringMatcher exclusion_list = 2;
 * @return {?proto.envoy.type.matcher.ListStringMatcher}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.getExclusionList = function() {
  return /** @type{?proto.envoy.type.matcher.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_string_pb.ListStringMatcher, 2));
};


/** @param {?proto.envoy.type.matcher.ListStringMatcher|undefined} value */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.setExclusionList = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsMatcher.prototype.clearExclusionList = function() {
  this.setExclusionList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.hasExclusionList = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional envoy.type.matcher.ListStringMatcher inclusion_list = 3;
 * @return {?proto.envoy.type.matcher.ListStringMatcher}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.getInclusionList = function() {
  return /** @type{?proto.envoy.type.matcher.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_string_pb.ListStringMatcher, 3));
};


/** @param {?proto.envoy.type.matcher.ListStringMatcher|undefined} value */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.setInclusionList = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.metrics.v2.StatsMatcher.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsMatcher.prototype.clearInclusionList = function() {
  this.setInclusionList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsMatcher.prototype.hasInclusionList = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.TagSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_);
};
goog.inherits(proto.envoy.config.metrics.v2.TagSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.TagSpecifier.displayName = 'proto.envoy.config.metrics.v2.TagSpecifier';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.config.metrics.v2.TagSpecifier.TagValueCase = {
  TAG_VALUE_NOT_SET: 0,
  REGEX: 2,
  FIXED_VALUE: 3
};

/**
 * @return {proto.envoy.config.metrics.v2.TagSpecifier.TagValueCase}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.getTagValueCase = function() {
  return /** @type {proto.envoy.config.metrics.v2.TagSpecifier.TagValueCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.TagSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.TagSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.TagSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regex: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fixedValue: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.TagSpecifier}
 */
proto.envoy.config.metrics.v2.TagSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.TagSpecifier;
  return proto.envoy.config.metrics.v2.TagSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.TagSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.TagSpecifier}
 */
proto.envoy.config.metrics.v2.TagSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFixedValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.TagSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.TagSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.TagSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string tag_name = 1;
 * @return {string}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.getTagName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.setTagName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string regex = 2;
 * @return {string}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.getRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.setRegex = function(value) {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.TagSpecifier.prototype.clearRegex = function() {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.hasRegex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string fixed_value = 3;
 * @return {string}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.getFixedValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.setFixedValue = function(value) {
  jspb.Message.setOneofField(this, 3, proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.TagSpecifier.prototype.clearFixedValue = function() {
  jspb.Message.setOneofField(this, 3, proto.envoy.config.metrics.v2.TagSpecifier.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.TagSpecifier.prototype.hasFixedValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.StatsdSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.metrics.v2.StatsdSink.oneofGroups_);
};
goog.inherits(proto.envoy.config.metrics.v2.StatsdSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.StatsdSink.displayName = 'proto.envoy.config.metrics.v2.StatsdSink';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.metrics.v2.StatsdSink.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.config.metrics.v2.StatsdSink.StatsdSpecifierCase = {
  STATSD_SPECIFIER_NOT_SET: 0,
  ADDRESS: 1,
  TCP_CLUSTER_NAME: 2
};

/**
 * @return {proto.envoy.config.metrics.v2.StatsdSink.StatsdSpecifierCase}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.getStatsdSpecifierCase = function() {
  return /** @type {proto.envoy.config.metrics.v2.StatsdSink.StatsdSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.metrics.v2.StatsdSink.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.StatsdSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.StatsdSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsdSink.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    tcpClusterName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    prefix: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.StatsdSink}
 */
proto.envoy.config.metrics.v2.StatsdSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.StatsdSink;
  return proto.envoy.config.metrics.v2.StatsdSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.StatsdSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.StatsdSink}
 */
proto.envoy.config.metrics.v2.StatsdSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTcpClusterName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.StatsdSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.StatsdSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.StatsdSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrefix();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional envoy.api.v2.core.Address address = 1;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.getAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 1));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.config.metrics.v2.StatsdSink.prototype.setAddress = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.metrics.v2.StatsdSink.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsdSink.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string tcp_cluster_name = 2;
 * @return {string}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.getTcpClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.StatsdSink.prototype.setTcpClusterName = function(value) {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.metrics.v2.StatsdSink.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.StatsdSink.prototype.clearTcpClusterName = function() {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.metrics.v2.StatsdSink.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.hasTcpClusterName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prefix = 3;
 * @return {string}
 */
proto.envoy.config.metrics.v2.StatsdSink.prototype.getPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.StatsdSink.prototype.setPrefix = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.DogStatsdSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.metrics.v2.DogStatsdSink.oneofGroups_);
};
goog.inherits(proto.envoy.config.metrics.v2.DogStatsdSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.DogStatsdSink.displayName = 'proto.envoy.config.metrics.v2.DogStatsdSink';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.metrics.v2.DogStatsdSink.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.DogStatsdSpecifierCase = {
  DOG_STATSD_SPECIFIER_NOT_SET: 0,
  ADDRESS: 1
};

/**
 * @return {proto.envoy.config.metrics.v2.DogStatsdSink.DogStatsdSpecifierCase}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.getDogStatsdSpecifierCase = function() {
  return /** @type {proto.envoy.config.metrics.v2.DogStatsdSink.DogStatsdSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.metrics.v2.DogStatsdSink.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.DogStatsdSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.DogStatsdSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.DogStatsdSink.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    prefix: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.DogStatsdSink}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.DogStatsdSink;
  return proto.envoy.config.metrics.v2.DogStatsdSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.DogStatsdSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.DogStatsdSink}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.DogStatsdSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.DogStatsdSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.DogStatsdSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getPrefix();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional envoy.api.v2.core.Address address = 1;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.getAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 1));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.setAddress = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.metrics.v2.DogStatsdSink.oneofGroups_[0], value);
};


proto.envoy.config.metrics.v2.DogStatsdSink.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string prefix = 3;
 * @return {string}
 */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.getPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.config.metrics.v2.DogStatsdSink.prototype.setPrefix = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.metrics.v2.HystrixSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.metrics.v2.HystrixSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.metrics.v2.HystrixSink.displayName = 'proto.envoy.config.metrics.v2.HystrixSink';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.metrics.v2.HystrixSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.metrics.v2.HystrixSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.metrics.v2.HystrixSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.HystrixSink.toObject = function(includeInstance, msg) {
  var f, obj = {
    numBuckets: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.metrics.v2.HystrixSink}
 */
proto.envoy.config.metrics.v2.HystrixSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.metrics.v2.HystrixSink;
  return proto.envoy.config.metrics.v2.HystrixSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.metrics.v2.HystrixSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.metrics.v2.HystrixSink}
 */
proto.envoy.config.metrics.v2.HystrixSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumBuckets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.metrics.v2.HystrixSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.metrics.v2.HystrixSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.metrics.v2.HystrixSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.metrics.v2.HystrixSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumBuckets();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 num_buckets = 1;
 * @return {number}
 */
proto.envoy.config.metrics.v2.HystrixSink.prototype.getNumBuckets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.envoy.config.metrics.v2.HystrixSink.prototype.setNumBuckets = function(value) {
  jspb.Message.setField(this, 1, value);
};


goog.object.extend(exports, proto.envoy.config.metrics.v2);
