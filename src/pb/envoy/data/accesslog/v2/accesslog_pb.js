/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_address_pb = require('../../../../envoy/api/v2/core/address_pb.js');
var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.exportSymbol('proto.envoy.data.accesslog.v2.AccessLogCommon', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.HTTPAccessLogEntry', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.HTTPRequestProperties', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.HTTPResponseProperties', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.ResponseFlags', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.TCPAccessLogEntry', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.TLSProperties', null, global);
goog.exportSymbol('proto.envoy.data.accesslog.v2.TLSProperties.TLSVersion', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.TCPAccessLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.TCPAccessLogEntry.displayName = 'proto.envoy.data.accesslog.v2.TCPAccessLogEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.TCPAccessLogEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.TCPAccessLogEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonProperties: (f = msg.getCommonProperties()) && proto.envoy.data.accesslog.v2.AccessLogCommon.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.TCPAccessLogEntry}
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.TCPAccessLogEntry;
  return proto.envoy.data.accesslog.v2.TCPAccessLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.TCPAccessLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.TCPAccessLogEntry}
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.data.accesslog.v2.AccessLogCommon;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.AccessLogCommon.deserializeBinaryFromReader);
      msg.setCommonProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.TCPAccessLogEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.TCPAccessLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonProperties();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.data.accesslog.v2.AccessLogCommon.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccessLogCommon common_properties = 1;
 * @return {?proto.envoy.data.accesslog.v2.AccessLogCommon}
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.prototype.getCommonProperties = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.AccessLogCommon} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.AccessLogCommon, 1));
};


/** @param {?proto.envoy.data.accesslog.v2.AccessLogCommon|undefined} value */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.prototype.setCommonProperties = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.data.accesslog.v2.TCPAccessLogEntry.prototype.clearCommonProperties = function() {
  this.setCommonProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.TCPAccessLogEntry.prototype.hasCommonProperties = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.HTTPAccessLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.displayName = 'proto.envoy.data.accesslog.v2.HTTPAccessLogEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonProperties: (f = msg.getCommonProperties()) && proto.envoy.data.accesslog.v2.AccessLogCommon.toObject(includeInstance, f),
    protocolVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    request: (f = msg.getRequest()) && proto.envoy.data.accesslog.v2.HTTPRequestProperties.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.envoy.data.accesslog.v2.HTTPResponseProperties.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.HTTPAccessLogEntry;
  return proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.data.accesslog.v2.AccessLogCommon;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.AccessLogCommon.deserializeBinaryFromReader);
      msg.setCommonProperties(value);
      break;
    case 2:
      var value = /** @type {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion} */ (reader.readEnum());
      msg.setProtocolVersion(value);
      break;
    case 3:
      var value = new proto.envoy.data.accesslog.v2.HTTPRequestProperties;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.HTTPRequestProperties.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 4:
      var value = new proto.envoy.data.accesslog.v2.HTTPResponseProperties;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.HTTPResponseProperties.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonProperties();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.data.accesslog.v2.AccessLogCommon.serializeBinaryToWriter
    );
  }
  f = message.getProtocolVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.data.accesslog.v2.HTTPRequestProperties.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.data.accesslog.v2.HTTPResponseProperties.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion = {
  PROTOCOL_UNSPECIFIED: 0,
  HTTP10: 1,
  HTTP11: 2,
  HTTP2: 3
};

/**
 * optional AccessLogCommon common_properties = 1;
 * @return {?proto.envoy.data.accesslog.v2.AccessLogCommon}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.getCommonProperties = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.AccessLogCommon} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.AccessLogCommon, 1));
};


/** @param {?proto.envoy.data.accesslog.v2.AccessLogCommon|undefined} value */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.setCommonProperties = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.clearCommonProperties = function() {
  this.setCommonProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.hasCommonProperties = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HTTPVersion protocol_version = 2;
 * @return {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.getProtocolVersion = function() {
  return /** @type {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion} value */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.setProtocolVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional HTTPRequestProperties request = 3;
 * @return {?proto.envoy.data.accesslog.v2.HTTPRequestProperties}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.getRequest = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.HTTPRequestProperties} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.HTTPRequestProperties, 3));
};


/** @param {?proto.envoy.data.accesslog.v2.HTTPRequestProperties|undefined} value */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HTTPResponseProperties response = 4;
 * @return {?proto.envoy.data.accesslog.v2.HTTPResponseProperties}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.getResponse = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.HTTPResponseProperties} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.HTTPResponseProperties, 4));
};


/** @param {?proto.envoy.data.accesslog.v2.HTTPResponseProperties|undefined} value */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.HTTPAccessLogEntry.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.AccessLogCommon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.AccessLogCommon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.AccessLogCommon.displayName = 'proto.envoy.data.accesslog.v2.AccessLogCommon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.AccessLogCommon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.AccessLogCommon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.toObject = function(includeInstance, msg) {
  var f, obj = {
    sampleRate: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    downstreamRemoteAddress: (f = msg.getDownstreamRemoteAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    downstreamLocalAddress: (f = msg.getDownstreamLocalAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    tlsProperties: (f = msg.getTlsProperties()) && proto.envoy.data.accesslog.v2.TLSProperties.toObject(includeInstance, f),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeToLastRxByte: (f = msg.getTimeToLastRxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    timeToFirstUpstreamTxByte: (f = msg.getTimeToFirstUpstreamTxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    timeToLastUpstreamTxByte: (f = msg.getTimeToLastUpstreamTxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    timeToFirstUpstreamRxByte: (f = msg.getTimeToFirstUpstreamRxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    timeToLastUpstreamRxByte: (f = msg.getTimeToLastUpstreamRxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    timeToFirstDownstreamTxByte: (f = msg.getTimeToFirstDownstreamTxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    timeToLastDownstreamTxByte: (f = msg.getTimeToLastDownstreamTxByte()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    upstreamRemoteAddress: (f = msg.getUpstreamRemoteAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    upstreamLocalAddress: (f = msg.getUpstreamLocalAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    upstreamCluster: jspb.Message.getFieldWithDefault(msg, 15, ""),
    responseFlags: (f = msg.getResponseFlags()) && proto.envoy.data.accesslog.v2.ResponseFlags.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && envoy_api_v2_core_base_pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.AccessLogCommon}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.AccessLogCommon;
  return proto.envoy.data.accesslog.v2.AccessLogCommon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.AccessLogCommon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.AccessLogCommon}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSampleRate(value);
      break;
    case 2:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setDownstreamRemoteAddress(value);
      break;
    case 3:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setDownstreamLocalAddress(value);
      break;
    case 4:
      var value = new proto.envoy.data.accesslog.v2.TLSProperties;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.TLSProperties.deserializeBinaryFromReader);
      msg.setTlsProperties(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToLastRxByte(value);
      break;
    case 7:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToFirstUpstreamTxByte(value);
      break;
    case 8:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToLastUpstreamTxByte(value);
      break;
    case 9:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToFirstUpstreamRxByte(value);
      break;
    case 10:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToLastUpstreamRxByte(value);
      break;
    case 11:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToFirstDownstreamTxByte(value);
      break;
    case 12:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeToLastDownstreamTxByte(value);
      break;
    case 13:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setUpstreamRemoteAddress(value);
      break;
    case 14:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setUpstreamLocalAddress(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstreamCluster(value);
      break;
    case 16:
      var value = new proto.envoy.data.accesslog.v2.ResponseFlags;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinaryFromReader);
      msg.setResponseFlags(value);
      break;
    case 17:
      var value = new envoy_api_v2_core_base_pb.Metadata;
      reader.readMessage(value,envoy_api_v2_core_base_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.AccessLogCommon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.AccessLogCommon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSampleRate();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getDownstreamRemoteAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getDownstreamLocalAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getTlsProperties();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.data.accesslog.v2.TLSProperties.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimeToLastRxByte();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTimeToFirstUpstreamTxByte();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTimeToLastUpstreamTxByte();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTimeToFirstUpstreamRxByte();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTimeToLastUpstreamRxByte();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTimeToFirstDownstreamTxByte();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTimeToLastDownstreamTxByte();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamRemoteAddress();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamLocalAddress();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamCluster();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getResponseFlags();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.envoy.data.accesslog.v2.ResponseFlags.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      envoy_api_v2_core_base_pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional double sample_rate = 1;
 * @return {number}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getSampleRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setSampleRate = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional envoy.api.v2.core.Address downstream_remote_address = 2;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getDownstreamRemoteAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 2));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setDownstreamRemoteAddress = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearDownstreamRemoteAddress = function() {
  this.setDownstreamRemoteAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasDownstreamRemoteAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional envoy.api.v2.core.Address downstream_local_address = 3;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getDownstreamLocalAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 3));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setDownstreamLocalAddress = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearDownstreamLocalAddress = function() {
  this.setDownstreamLocalAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasDownstreamLocalAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TLSProperties tls_properties = 4;
 * @return {?proto.envoy.data.accesslog.v2.TLSProperties}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTlsProperties = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.TLSProperties} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.TLSProperties, 4));
};


/** @param {?proto.envoy.data.accesslog.v2.TLSProperties|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTlsProperties = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTlsProperties = function() {
  this.setTlsProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTlsProperties = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Duration time_to_last_rx_byte = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToLastRxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToLastRxByte = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToLastRxByte = function() {
  this.setTimeToLastRxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToLastRxByte = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Duration time_to_first_upstream_tx_byte = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToFirstUpstreamTxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 7));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToFirstUpstreamTxByte = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToFirstUpstreamTxByte = function() {
  this.setTimeToFirstUpstreamTxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToFirstUpstreamTxByte = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Duration time_to_last_upstream_tx_byte = 8;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToLastUpstreamTxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 8));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToLastUpstreamTxByte = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToLastUpstreamTxByte = function() {
  this.setTimeToLastUpstreamTxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToLastUpstreamTxByte = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Duration time_to_first_upstream_rx_byte = 9;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToFirstUpstreamRxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 9));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToFirstUpstreamRxByte = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToFirstUpstreamRxByte = function() {
  this.setTimeToFirstUpstreamRxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToFirstUpstreamRxByte = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Duration time_to_last_upstream_rx_byte = 10;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToLastUpstreamRxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 10));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToLastUpstreamRxByte = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToLastUpstreamRxByte = function() {
  this.setTimeToLastUpstreamRxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToLastUpstreamRxByte = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Duration time_to_first_downstream_tx_byte = 11;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToFirstDownstreamTxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 11));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToFirstDownstreamTxByte = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToFirstDownstreamTxByte = function() {
  this.setTimeToFirstDownstreamTxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToFirstDownstreamTxByte = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Duration time_to_last_downstream_tx_byte = 12;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getTimeToLastDownstreamTxByte = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 12));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setTimeToLastDownstreamTxByte = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearTimeToLastDownstreamTxByte = function() {
  this.setTimeToLastDownstreamTxByte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasTimeToLastDownstreamTxByte = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional envoy.api.v2.core.Address upstream_remote_address = 13;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getUpstreamRemoteAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 13));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setUpstreamRemoteAddress = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearUpstreamRemoteAddress = function() {
  this.setUpstreamRemoteAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasUpstreamRemoteAddress = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional envoy.api.v2.core.Address upstream_local_address = 14;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getUpstreamLocalAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 14));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setUpstreamLocalAddress = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearUpstreamLocalAddress = function() {
  this.setUpstreamLocalAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasUpstreamLocalAddress = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string upstream_cluster = 15;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getUpstreamCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setUpstreamCluster = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional ResponseFlags response_flags = 16;
 * @return {?proto.envoy.data.accesslog.v2.ResponseFlags}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getResponseFlags = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.ResponseFlags} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.ResponseFlags, 16));
};


/** @param {?proto.envoy.data.accesslog.v2.ResponseFlags|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setResponseFlags = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearResponseFlags = function() {
  this.setResponseFlags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasResponseFlags = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional envoy.api.v2.core.Metadata metadata = 17;
 * @return {?proto.envoy.api.v2.core.Metadata}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.getMetadata = function() {
  return /** @type{?proto.envoy.api.v2.core.Metadata} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.Metadata, 17));
};


/** @param {?proto.envoy.api.v2.core.Metadata|undefined} value */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.AccessLogCommon.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.ResponseFlags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.ResponseFlags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.ResponseFlags.displayName = 'proto.envoy.data.accesslog.v2.ResponseFlags';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.ResponseFlags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.toObject = function(includeInstance, msg) {
  var f, obj = {
    failedLocalHealthcheck: jspb.Message.getFieldWithDefault(msg, 1, false),
    noHealthyUpstream: jspb.Message.getFieldWithDefault(msg, 2, false),
    upstreamRequestTimeout: jspb.Message.getFieldWithDefault(msg, 3, false),
    localReset: jspb.Message.getFieldWithDefault(msg, 4, false),
    upstreamRemoteReset: jspb.Message.getFieldWithDefault(msg, 5, false),
    upstreamConnectionFailure: jspb.Message.getFieldWithDefault(msg, 6, false),
    upstreamConnectionTermination: jspb.Message.getFieldWithDefault(msg, 7, false),
    upstreamOverflow: jspb.Message.getFieldWithDefault(msg, 8, false),
    noRouteFound: jspb.Message.getFieldWithDefault(msg, 9, false),
    delayInjected: jspb.Message.getFieldWithDefault(msg, 10, false),
    faultInjected: jspb.Message.getFieldWithDefault(msg, 11, false),
    rateLimited: jspb.Message.getFieldWithDefault(msg, 12, false),
    unauthorizedDetails: (f = msg.getUnauthorizedDetails()) && proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.toObject(includeInstance, f),
    rateLimitServiceError: jspb.Message.getFieldWithDefault(msg, 14, false),
    downstreamConnectionTermination: jspb.Message.getFieldWithDefault(msg, 15, false),
    upstreamRetryLimitExceeded: jspb.Message.getFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.ResponseFlags;
  return proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailedLocalHealthcheck(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoHealthyUpstream(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamRequestTimeout(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalReset(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamRemoteReset(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamConnectionFailure(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamConnectionTermination(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamOverflow(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoRouteFound(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelayInjected(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFaultInjected(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRateLimited(value);
      break;
    case 13:
      var value = new proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinaryFromReader);
      msg.setUnauthorizedDetails(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRateLimitServiceError(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownstreamConnectionTermination(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamRetryLimitExceeded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.ResponseFlags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailedLocalHealthcheck();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNoHealthyUpstream();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUpstreamRequestTimeout();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLocalReset();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUpstreamRemoteReset();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUpstreamConnectionFailure();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUpstreamConnectionTermination();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getUpstreamOverflow();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getNoRouteFound();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getDelayInjected();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getFaultInjected();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getRateLimited();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getUnauthorizedDetails();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitServiceError();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDownstreamConnectionTermination();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getUpstreamRetryLimitExceeded();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.displayName = 'proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized;
  return proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason = {
  REASON_UNSPECIFIED: 0,
  EXTERNAL_SERVICE: 1
};

/**
 * optional Reason reason = 1;
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.getReason = function() {
  return /** @type {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason} value */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.setReason = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool failed_local_healthcheck = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getFailedLocalHealthcheck = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setFailedLocalHealthcheck = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool no_healthy_upstream = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getNoHealthyUpstream = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setNoHealthyUpstream = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool upstream_request_timeout = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamRequestTimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamRequestTimeout = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool local_reset = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getLocalReset = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setLocalReset = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bool upstream_remote_reset = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamRemoteReset = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamRemoteReset = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bool upstream_connection_failure = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamConnectionFailure = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamConnectionFailure = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool upstream_connection_termination = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamConnectionTermination = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamConnectionTermination = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional bool upstream_overflow = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamOverflow = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamOverflow = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional bool no_route_found = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getNoRouteFound = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setNoRouteFound = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional bool delay_injected = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getDelayInjected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setDelayInjected = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional bool fault_injected = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getFaultInjected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setFaultInjected = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional bool rate_limited = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getRateLimited = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setRateLimited = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional Unauthorized unauthorized_details = 13;
 * @return {?proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUnauthorizedDetails = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized, 13));
};


/** @param {?proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized|undefined} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUnauthorizedDetails = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.envoy.data.accesslog.v2.ResponseFlags.prototype.clearUnauthorizedDetails = function() {
  this.setUnauthorizedDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.hasUnauthorizedDetails = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool rate_limit_service_error = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getRateLimitServiceError = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setRateLimitServiceError = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional bool downstream_connection_termination = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getDownstreamConnectionTermination = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setDownstreamConnectionTermination = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional bool upstream_retry_limit_exceeded = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamRetryLimitExceeded = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamRetryLimitExceeded = function(value) {
  jspb.Message.setField(this, 16, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.TLSProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.TLSProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.TLSProperties.displayName = 'proto.envoy.data.accesslog.v2.TLSProperties';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.TLSProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.TLSProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.TLSProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    tlsVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tlsCipherSuite: (f = msg.getTlsCipherSuite()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    tlsSniHostname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.TLSProperties}
 */
proto.envoy.data.accesslog.v2.TLSProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.TLSProperties;
  return proto.envoy.data.accesslog.v2.TLSProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.TLSProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.TLSProperties}
 */
proto.envoy.data.accesslog.v2.TLSProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.data.accesslog.v2.TLSProperties.TLSVersion} */ (reader.readEnum());
      msg.setTlsVersion(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setTlsCipherSuite(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTlsSniHostname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.TLSProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.TLSProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.TLSProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTlsVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTlsCipherSuite();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getTlsSniHostname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.data.accesslog.v2.TLSProperties.TLSVersion = {
  VERSION_UNSPECIFIED: 0,
  TLSV1: 1,
  TLSV1_1: 2,
  TLSV1_2: 3,
  TLSV1_3: 4
};

/**
 * optional TLSVersion tls_version = 1;
 * @return {!proto.envoy.data.accesslog.v2.TLSProperties.TLSVersion}
 */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.getTlsVersion = function() {
  return /** @type {!proto.envoy.data.accesslog.v2.TLSProperties.TLSVersion} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.envoy.data.accesslog.v2.TLSProperties.TLSVersion} value */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.setTlsVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional google.protobuf.UInt32Value tls_cipher_suite = 2;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.getTlsCipherSuite = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 2));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.setTlsCipherSuite = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.data.accesslog.v2.TLSProperties.prototype.clearTlsCipherSuite = function() {
  this.setTlsCipherSuite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.hasTlsCipherSuite = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tls_sni_hostname = 3;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.getTlsSniHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.TLSProperties.prototype.setTlsSniHostname = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.HTTPRequestProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.HTTPRequestProperties.displayName = 'proto.envoy.data.accesslog.v2.HTTPRequestProperties';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.HTTPRequestProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.HTTPRequestProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestMethod: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scheme: jspb.Message.getFieldWithDefault(msg, 2, ""),
    authority: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: (f = msg.getPort()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    path: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userAgent: jspb.Message.getFieldWithDefault(msg, 6, ""),
    referer: jspb.Message.getFieldWithDefault(msg, 7, ""),
    forwardedFor: jspb.Message.getFieldWithDefault(msg, 8, ""),
    requestId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    originalPath: jspb.Message.getFieldWithDefault(msg, 10, ""),
    requestHeadersBytes: jspb.Message.getFieldWithDefault(msg, 11, 0),
    requestBodyBytes: jspb.Message.getFieldWithDefault(msg, 12, 0),
    requestHeadersMap: (f = msg.getRequestHeadersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.HTTPRequestProperties}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.HTTPRequestProperties;
  return proto.envoy.data.accesslog.v2.HTTPRequestProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.HTTPRequestProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.HTTPRequestProperties}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.api.v2.core.RequestMethod} */ (reader.readEnum());
      msg.setRequestMethod(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheme(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAgent(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferer(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setForwardedFor(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalPath(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestHeadersBytes(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestBodyBytes(value);
      break;
    case 13:
      var value = msg.getRequestHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.HTTPRequestProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.HTTPRequestProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getScheme();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserAgent();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReferer();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getForwardedFor();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOriginalPath();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRequestHeadersBytes();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getRequestBodyBytes();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getRequestHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional envoy.api.v2.core.RequestMethod request_method = 1;
 * @return {!proto.envoy.api.v2.core.RequestMethod}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getRequestMethod = function() {
  return /** @type {!proto.envoy.api.v2.core.RequestMethod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.envoy.api.v2.core.RequestMethod} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setRequestMethod = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string scheme = 2;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getScheme = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setScheme = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string authority = 3;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setAuthority = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional google.protobuf.UInt32Value port = 4;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getPort = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 4));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setPort = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.clearPort = function() {
  this.setPort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.hasPort = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string path = 5;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setPath = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string user_agent = 6;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getUserAgent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setUserAgent = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string referer = 7;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getReferer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setReferer = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string forwarded_for = 8;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getForwardedFor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setForwardedFor = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string request_id = 9;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setRequestId = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string original_path = 10;
 * @return {string}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getOriginalPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setOriginalPath = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 request_headers_bytes = 11;
 * @return {number}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getRequestHeadersBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setRequestHeadersBytes = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 request_body_bytes = 12;
 * @return {number}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getRequestBodyBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.setRequestBodyBytes = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * map<string, string> request_headers = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.getRequestHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


proto.envoy.data.accesslog.v2.HTTPRequestProperties.prototype.clearRequestHeadersMap = function() {
  this.getRequestHeadersMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.HTTPResponseProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.data.accesslog.v2.HTTPResponseProperties.displayName = 'proto.envoy.data.accesslog.v2.HTTPResponseProperties';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.HTTPResponseProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.HTTPResponseProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseCode: (f = msg.getResponseCode()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    responseHeadersBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    responseBodyBytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    responseHeadersMap: (f = msg.getResponseHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    responseTrailersMap: (f = msg.getResponseTrailersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.HTTPResponseProperties}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.HTTPResponseProperties;
  return proto.envoy.data.accesslog.v2.HTTPResponseProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.HTTPResponseProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.HTTPResponseProperties}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setResponseCode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setResponseHeadersBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setResponseBodyBytes(value);
      break;
    case 4:
      var value = msg.getResponseHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 5:
      var value = msg.getResponseTrailersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.HTTPResponseProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.HTTPResponseProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseCode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getResponseHeadersBytes();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getResponseBodyBytes();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getResponseHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getResponseTrailersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional google.protobuf.UInt32Value response_code = 1;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.getResponseCode = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 1));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.setResponseCode = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.clearResponseCode = function() {
  this.setResponseCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.hasResponseCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 response_headers_bytes = 2;
 * @return {number}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.getResponseHeadersBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.setResponseHeadersBytes = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 response_body_bytes = 3;
 * @return {number}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.getResponseBodyBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.setResponseBodyBytes = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * map<string, string> response_headers = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.getResponseHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.clearResponseHeadersMap = function() {
  this.getResponseHeadersMap().clear();
};


/**
 * map<string, string> response_trailers = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.getResponseTrailersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


proto.envoy.data.accesslog.v2.HTTPResponseProperties.prototype.clearResponseTrailersMap = function() {
  this.getResponseTrailersMap().clear();
};


goog.object.extend(exports, proto.envoy.data.accesslog.v2);
