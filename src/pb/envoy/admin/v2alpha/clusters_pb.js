/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_admin_v2alpha_metrics_pb = require('../../../envoy/admin/v2alpha/metrics_pb.js');
var envoy_api_v2_core_address_pb = require('../../../envoy/api/v2/core/address_pb.js');
var envoy_api_v2_core_health_check_pb = require('../../../envoy/api/v2/core/health_check_pb.js');
var envoy_type_percent_pb = require('../../../envoy/type/percent_pb.js');
goog.exportSymbol('proto.envoy.admin.v2alpha.ClusterStatus', null, global);
goog.exportSymbol('proto.envoy.admin.v2alpha.Clusters', null, global);
goog.exportSymbol('proto.envoy.admin.v2alpha.HostHealthStatus', null, global);
goog.exportSymbol('proto.envoy.admin.v2alpha.HostStatus', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.admin.v2alpha.Clusters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.admin.v2alpha.Clusters.repeatedFields_, null);
};
goog.inherits(proto.envoy.admin.v2alpha.Clusters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.admin.v2alpha.Clusters.displayName = 'proto.envoy.admin.v2alpha.Clusters';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.admin.v2alpha.Clusters.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.admin.v2alpha.Clusters.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.admin.v2alpha.Clusters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.admin.v2alpha.Clusters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.Clusters.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterStatusesList: jspb.Message.toObjectList(msg.getClusterStatusesList(),
    proto.envoy.admin.v2alpha.ClusterStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.admin.v2alpha.Clusters}
 */
proto.envoy.admin.v2alpha.Clusters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.admin.v2alpha.Clusters;
  return proto.envoy.admin.v2alpha.Clusters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.admin.v2alpha.Clusters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.admin.v2alpha.Clusters}
 */
proto.envoy.admin.v2alpha.Clusters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.admin.v2alpha.ClusterStatus;
      reader.readMessage(value,proto.envoy.admin.v2alpha.ClusterStatus.deserializeBinaryFromReader);
      msg.addClusterStatuses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.admin.v2alpha.Clusters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.admin.v2alpha.Clusters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.admin.v2alpha.Clusters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.Clusters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.admin.v2alpha.ClusterStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClusterStatus cluster_statuses = 1;
 * @return {!Array.<!proto.envoy.admin.v2alpha.ClusterStatus>}
 */
proto.envoy.admin.v2alpha.Clusters.prototype.getClusterStatusesList = function() {
  return /** @type{!Array.<!proto.envoy.admin.v2alpha.ClusterStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.admin.v2alpha.ClusterStatus, 1));
};


/** @param {!Array.<!proto.envoy.admin.v2alpha.ClusterStatus>} value */
proto.envoy.admin.v2alpha.Clusters.prototype.setClusterStatusesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.admin.v2alpha.ClusterStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.admin.v2alpha.ClusterStatus}
 */
proto.envoy.admin.v2alpha.Clusters.prototype.addClusterStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.admin.v2alpha.ClusterStatus, opt_index);
};


proto.envoy.admin.v2alpha.Clusters.prototype.clearClusterStatusesList = function() {
  this.setClusterStatusesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.admin.v2alpha.ClusterStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.admin.v2alpha.ClusterStatus.repeatedFields_, null);
};
goog.inherits(proto.envoy.admin.v2alpha.ClusterStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.admin.v2alpha.ClusterStatus.displayName = 'proto.envoy.admin.v2alpha.ClusterStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.admin.v2alpha.ClusterStatus.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.admin.v2alpha.ClusterStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.admin.v2alpha.ClusterStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.ClusterStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addedViaApi: jspb.Message.getFieldWithDefault(msg, 2, false),
    successRateEjectionThreshold: (f = msg.getSuccessRateEjectionThreshold()) && envoy_type_percent_pb.Percent.toObject(includeInstance, f),
    hostStatusesList: jspb.Message.toObjectList(msg.getHostStatusesList(),
    proto.envoy.admin.v2alpha.HostStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.admin.v2alpha.ClusterStatus}
 */
proto.envoy.admin.v2alpha.ClusterStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.admin.v2alpha.ClusterStatus;
  return proto.envoy.admin.v2alpha.ClusterStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.admin.v2alpha.ClusterStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.admin.v2alpha.ClusterStatus}
 */
proto.envoy.admin.v2alpha.ClusterStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddedViaApi(value);
      break;
    case 3:
      var value = new envoy_type_percent_pb.Percent;
      reader.readMessage(value,envoy_type_percent_pb.Percent.deserializeBinaryFromReader);
      msg.setSuccessRateEjectionThreshold(value);
      break;
    case 4:
      var value = new proto.envoy.admin.v2alpha.HostStatus;
      reader.readMessage(value,proto.envoy.admin.v2alpha.HostStatus.deserializeBinaryFromReader);
      msg.addHostStatuses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.admin.v2alpha.ClusterStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.admin.v2alpha.ClusterStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.ClusterStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddedViaApi();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSuccessRateEjectionThreshold();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_type_percent_pb.Percent.serializeBinaryToWriter
    );
  }
  f = message.getHostStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.envoy.admin.v2alpha.HostStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool added_via_api = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.getAddedViaApi = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.setAddedViaApi = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional envoy.type.Percent success_rate_ejection_threshold = 3;
 * @return {?proto.envoy.type.Percent}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.getSuccessRateEjectionThreshold = function() {
  return /** @type{?proto.envoy.type.Percent} */ (
    jspb.Message.getWrapperField(this, envoy_type_percent_pb.Percent, 3));
};


/** @param {?proto.envoy.type.Percent|undefined} value */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.setSuccessRateEjectionThreshold = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.envoy.admin.v2alpha.ClusterStatus.prototype.clearSuccessRateEjectionThreshold = function() {
  this.setSuccessRateEjectionThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.hasSuccessRateEjectionThreshold = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated HostStatus host_statuses = 4;
 * @return {!Array.<!proto.envoy.admin.v2alpha.HostStatus>}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.getHostStatusesList = function() {
  return /** @type{!Array.<!proto.envoy.admin.v2alpha.HostStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.admin.v2alpha.HostStatus, 4));
};


/** @param {!Array.<!proto.envoy.admin.v2alpha.HostStatus>} value */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.setHostStatusesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.envoy.admin.v2alpha.HostStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.admin.v2alpha.HostStatus}
 */
proto.envoy.admin.v2alpha.ClusterStatus.prototype.addHostStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.envoy.admin.v2alpha.HostStatus, opt_index);
};


proto.envoy.admin.v2alpha.ClusterStatus.prototype.clearHostStatusesList = function() {
  this.setHostStatusesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.admin.v2alpha.HostStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.admin.v2alpha.HostStatus.repeatedFields_, null);
};
goog.inherits(proto.envoy.admin.v2alpha.HostStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.admin.v2alpha.HostStatus.displayName = 'proto.envoy.admin.v2alpha.HostStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.admin.v2alpha.HostStatus.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.admin.v2alpha.HostStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.admin.v2alpha.HostStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.HostStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && envoy_api_v2_core_address_pb.Address.toObject(includeInstance, f),
    statsList: jspb.Message.toObjectList(msg.getStatsList(),
    envoy_admin_v2alpha_metrics_pb.SimpleMetric.toObject, includeInstance),
    healthStatus: (f = msg.getHealthStatus()) && proto.envoy.admin.v2alpha.HostHealthStatus.toObject(includeInstance, f),
    successRate: (f = msg.getSuccessRate()) && envoy_type_percent_pb.Percent.toObject(includeInstance, f),
    weight: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.admin.v2alpha.HostStatus}
 */
proto.envoy.admin.v2alpha.HostStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.admin.v2alpha.HostStatus;
  return proto.envoy.admin.v2alpha.HostStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.admin.v2alpha.HostStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.admin.v2alpha.HostStatus}
 */
proto.envoy.admin.v2alpha.HostStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_address_pb.Address;
      reader.readMessage(value,envoy_api_v2_core_address_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = new envoy_admin_v2alpha_metrics_pb.SimpleMetric;
      reader.readMessage(value,envoy_admin_v2alpha_metrics_pb.SimpleMetric.deserializeBinaryFromReader);
      msg.addStats(value);
      break;
    case 3:
      var value = new proto.envoy.admin.v2alpha.HostHealthStatus;
      reader.readMessage(value,proto.envoy.admin.v2alpha.HostHealthStatus.deserializeBinaryFromReader);
      msg.setHealthStatus(value);
      break;
    case 4:
      var value = new envoy_type_percent_pb.Percent;
      reader.readMessage(value,envoy_type_percent_pb.Percent.deserializeBinaryFromReader);
      msg.setSuccessRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.admin.v2alpha.HostStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.admin.v2alpha.HostStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.HostStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_address_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_admin_v2alpha_metrics_pb.SimpleMetric.serializeBinaryToWriter
    );
  }
  f = message.getHealthStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.admin.v2alpha.HostHealthStatus.serializeBinaryToWriter
    );
  }
  f = message.getSuccessRate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      envoy_type_percent_pb.Percent.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional envoy.api.v2.core.Address address = 1;
 * @return {?proto.envoy.api.v2.core.Address}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.getAddress = function() {
  return /** @type{?proto.envoy.api.v2.core.Address} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_address_pb.Address, 1));
};


/** @param {?proto.envoy.api.v2.core.Address|undefined} value */
proto.envoy.admin.v2alpha.HostStatus.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.admin.v2alpha.HostStatus.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated SimpleMetric stats = 2;
 * @return {!Array.<!proto.envoy.admin.v2alpha.SimpleMetric>}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.getStatsList = function() {
  return /** @type{!Array.<!proto.envoy.admin.v2alpha.SimpleMetric>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_admin_v2alpha_metrics_pb.SimpleMetric, 2));
};


/** @param {!Array.<!proto.envoy.admin.v2alpha.SimpleMetric>} value */
proto.envoy.admin.v2alpha.HostStatus.prototype.setStatsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.admin.v2alpha.SimpleMetric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.admin.v2alpha.SimpleMetric}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.addStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.admin.v2alpha.SimpleMetric, opt_index);
};


proto.envoy.admin.v2alpha.HostStatus.prototype.clearStatsList = function() {
  this.setStatsList([]);
};


/**
 * optional HostHealthStatus health_status = 3;
 * @return {?proto.envoy.admin.v2alpha.HostHealthStatus}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.getHealthStatus = function() {
  return /** @type{?proto.envoy.admin.v2alpha.HostHealthStatus} */ (
    jspb.Message.getWrapperField(this, proto.envoy.admin.v2alpha.HostHealthStatus, 3));
};


/** @param {?proto.envoy.admin.v2alpha.HostHealthStatus|undefined} value */
proto.envoy.admin.v2alpha.HostStatus.prototype.setHealthStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.envoy.admin.v2alpha.HostStatus.prototype.clearHealthStatus = function() {
  this.setHealthStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.hasHealthStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.type.Percent success_rate = 4;
 * @return {?proto.envoy.type.Percent}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.getSuccessRate = function() {
  return /** @type{?proto.envoy.type.Percent} */ (
    jspb.Message.getWrapperField(this, envoy_type_percent_pb.Percent, 4));
};


/** @param {?proto.envoy.type.Percent|undefined} value */
proto.envoy.admin.v2alpha.HostStatus.prototype.setSuccessRate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.envoy.admin.v2alpha.HostStatus.prototype.clearSuccessRate = function() {
  this.setSuccessRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.hasSuccessRate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 weight = 5;
 * @return {number}
 */
proto.envoy.admin.v2alpha.HostStatus.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.envoy.admin.v2alpha.HostStatus.prototype.setWeight = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.admin.v2alpha.HostHealthStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.admin.v2alpha.HostHealthStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.admin.v2alpha.HostHealthStatus.displayName = 'proto.envoy.admin.v2alpha.HostHealthStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.admin.v2alpha.HostHealthStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.admin.v2alpha.HostHealthStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.HostHealthStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    failedActiveHealthCheck: jspb.Message.getFieldWithDefault(msg, 1, false),
    failedOutlierCheck: jspb.Message.getFieldWithDefault(msg, 2, false),
    failedActiveDegradedCheck: jspb.Message.getFieldWithDefault(msg, 4, false),
    edsHealthStatus: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.admin.v2alpha.HostHealthStatus}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.admin.v2alpha.HostHealthStatus;
  return proto.envoy.admin.v2alpha.HostHealthStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.admin.v2alpha.HostHealthStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.admin.v2alpha.HostHealthStatus}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailedActiveHealthCheck(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailedOutlierCheck(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailedActiveDegradedCheck(value);
      break;
    case 3:
      var value = /** @type {!proto.envoy.api.v2.core.HealthStatus} */ (reader.readEnum());
      msg.setEdsHealthStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.admin.v2alpha.HostHealthStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.admin.v2alpha.HostHealthStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.admin.v2alpha.HostHealthStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailedActiveHealthCheck();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFailedOutlierCheck();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFailedActiveDegradedCheck();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getEdsHealthStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional bool failed_active_health_check = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.getFailedActiveHealthCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.setFailedActiveHealthCheck = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool failed_outlier_check = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.getFailedOutlierCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.setFailedOutlierCheck = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool failed_active_degraded_check = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.getFailedActiveDegradedCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.setFailedActiveDegradedCheck = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional envoy.api.v2.core.HealthStatus eds_health_status = 3;
 * @return {!proto.envoy.api.v2.core.HealthStatus}
 */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.getEdsHealthStatus = function() {
  return /** @type {!proto.envoy.api.v2.core.HealthStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.envoy.api.v2.core.HealthStatus} value */
proto.envoy.admin.v2alpha.HostHealthStatus.prototype.setEdsHealthStatus = function(value) {
  jspb.Message.setField(this, 3, value);
};


goog.object.extend(exports, proto.envoy.admin.v2alpha);
